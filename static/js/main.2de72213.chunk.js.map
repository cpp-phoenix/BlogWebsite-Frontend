{"version":3,"sources":["Constants/application.constants.js","Components/Signin.js","Components/SigninCard.js","Components/CarouselCard.js","Components/Signup.js","Components/SignupCard.js","Components/ContinueToLogin.js","Components/ForgotPasswordPage.js","Components/Landing.js","App.js","Components/CreatePost.js","Components/NavBar.js","Components/PostCard.js","Components/ExplorePage.js","Components/MessagesPage.js","Components/NotificationsPage.js","Components/MyPosts.js","Components/MyLikes.js","Components/MyAvatar.js","Components/ProfilePage.js","Components/SearchResult.js","Components/SavedPosts.js","Components/HomePage.js","Components/BlogMain.js","serviceWorker.js","index.js"],"names":["RestConstants","Signin","username","localStorage","getItem","password","onChangeTextField","event","target","name","value","setState","usernameHelperText","passwordHelperText","btoa","authenticateUser","a","data","userName","email","state","indexOf","fetch","method","headers","body","JSON","stringify","catch","error","response","json","submitData","Status","setItem","redirect","auth","alert","this","action","to","pathname","activeTab","Form","id","className","TextField","label","color","helperText","onChange","type","Typography","gutterBottom","Link","onClick","props","updateViewState","href","Button","React","Component","SiginCard","variant","display","src","alt","CarouselCard","Carousel","fade","Item","Caption","Signup","handleChange","nameValue","usernameValue","emailValue","passwordValue","saveUser","avatar","Math","floor","random","UserName","Email","Password","Name","Avatar","placeholder","SignupCard","ContinueToLogin","ForgotPasswordPage","sendEmail","showOtp","buttonText","startIcon","Landing","whichPage","stateName","active-view","changeViewState","SigninCard","App","style","backgroundImage","CreatePost","title","description","savePost","Title","Description","parseInt","then","checkPost","titleHelper","titleShow","descriptionHelper","fontSize","green","height","marginTop","marginLeft","marginRight","width","borderRadius","position","backgroundColor","multiline","rows","NavBar","handleClick","param","submitPost","removeItem","loggedOut","replace","authorised","List","ListItem","button","ListItemIcon","ListItemText","primary","red","showHidePost","PostCard","toggleFavourite","postRequest","PostId","postID","res","calledBy","toggleBookmark","toggleChat","toggleSend","userDetails","postid","likedposts","length","savedposts","postDetails","timeRange","Date","getTime","updatedtimestamp","toString","round","component","getDateTime","Explore","savedPosts","map","index","MessagesPage","Card","CardContent","CardActions","size","NotificationPage","MyPosts","fetchMyPosts","undefined","createdposts","fetchedSuccess","PostIds","Size","page","Data","textAlign","paddingLeft","MyLikes","fetchPostDetails","likedPosts","console","log","MyAvatar","choose","saveAvatar","avatarRequest","updateAvatar","zIndex","border","Profile","fetchUserDetails","followers","following","selectPost","postNavbarClass","postNavbarTextClass","likesNavbarClass","likeNavbarTextClass","avatarNavbarClass","avatarNavbarTextClass","currentlySelected","selectLikes","selectAvatar","selectedPage","joinedDate","createdtimestamp","getMonth","getFullYear","inset","fontColor","avatarId","SearchResult","FollowingUserName","showNoResults","disabled","unFollow","follow","SavedPosts","userDetailsFetched","postDetailsFetched","updatePage","HomePage","Page","elements","populateLikedToggle","newElements","BlogMain","searchUsername","searchingFor","loading","location","activeTabs","InputProps","startAdornment","InputAdornment","Boolean","window","hostname","match","routing","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2de72213.chunk.js","sourcesContent":["const ApplicationConstants = {\n    EMPTY_STRING: \"\"\n};\n\nconst RestConstants = {\n    BASE_URL: \"https://blog-backend-v1.herokuapp.com\",\n    AUTHENTICATE_USER: \"/authenticateUser\",\n    SAVE_USER: \"/saveUser\",\n    SAVE_POST: \"/savePost\",\n    FETCH_POST: \"/fetchPost\",\n    FETCH_POST_BY_POSTIDS: \"/fetchByPostIds\",\n    FETCH_USER: \"/fetchUser\"\n};\n\nexport {\n    ApplicationConstants, RestConstants\n};","import React from 'react'\nimport { Redirect } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport { Button, TextField, Typography, Link } from '@material-ui/core';\nimport { RestConstants } from '../Constants/application.constants';\n\nclass Signin extends React.Component {\n  constructor() {\n    let username = localStorage.getItem('username');\n    let password = localStorage.getItem('password');\n    super();\n    this.state = {\n      username: username != null ? username : \"\",\n      usernameHelperText: \"\",\n      password: password != null ? password : \"\",\n      passwordHelperText: \"\",\n      auth: false,\n      redirect: false\n    }\n    \n  }\n\n  componentDidMount() {\n    if(this.state.username !== \"\" && this.state.password !== \"\") {\n      this.submitData();\n    }\n  }\n\n  onChangeTextField = (event) => {\n    if (event.target.name === \"username\") {\n      if(event.target.value !== \"\") {\n        this.setState({usernameHelperText: \"\"});\n      }\n      else {\n        this.setState({usernameHelperText: \"This field is mandatory\"});\n      }\n      this.setState({username: event.target.value});\n    }\n    else {\n      if(event.target.value !== \"\") {\n        this.setState({passwordHelperText: \"\"});\n      }\n      else {\n        this.setState({passwordHelperText: \"Password is mandatory\"});\n      }\n      this.setState({password: btoa(event.target.value)});\n    }\n  }\n\n  authenticateUser = async () => {\n    const data = {\n      userName: \"\",\n      email: \"\",\n      password: \"\"\n    }\n    if (this.state.username.indexOf(\".com\") === -1) {\n      data.userName = this.state.username;\n    }\n    else {\n      data.email = this.state.username;\n    }\n    data.password = this.state.password;\n    let response = await fetch(RestConstants.AUTHENTICATE_USER, {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json', \n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).catch(error => {});\n\n    return await response.json();\n  }\n\n  submitData = async (event) => {\n    \n    if(this.state.username === \"\") {\n      this.setState({usernameHelperText: \"This field is mandatory\"});\n    }\n    if(this.state.password === \"\") {\n      this.setState({passwordHelperText: \"Password is mandatory\"});\n    }\n    if(this.state.username !== \"\" && this.state.password !== \"\") {\n      const data = await this.authenticateUser();\n      if(data.Status === 3000) {\n        localStorage.setItem('username', this.state.username);\n        localStorage.setItem('password', this.state.password);\n        this.setState({redirect: true, auth: true});\n      }\n      else {\n        alert(data.Status);\n      }\n    }\n  }\n\n  render() {\n    if(this.state.redirect) {\n      return <Redirect action=\"REPLACE\" to={{\n        pathname: '/mainPage',\n        state: { \n          auth: this.state.auth,\n          activeTab: \"Home\"\n         }\n    }}/>;\n    }\n    return(\n      <Form id=\"form\">\n        <div className = \"userEmail\">\n          <TextField name=\"username\" label=\"Users name or Email\" id=\"outlined-size-normal\" color=\"primary\" helperText={this.state.usernameHelperText} onChange={this.onChangeTextField}/>\n        </div>\n        <div className = \"passwordDiv\">\n          <TextField name=\"password\" type=\"password\" label=\"Password\" id=\"outlined-size-normal\" helperText={this.state.passwordHelperText} onChange={this.onChangeTextField} />\n        </div>  \n        <div className = \"forgot-password\">  \n          <Typography className = \"forgot-password-typo\" gutterBottom>\n            <Link onClick={() => {this.props.updateViewState(\"ForgotPassword\")}} href=\"#\" className = \"forgot-password-typo1\" color=\"primary\">Forgot Password?</Link>\n          </Typography>\n        </div>\n\n        <div className=\"button\">\n          <Button className = \"button-internal\" color=\"inherit\" onClick={this.submitData}>\n            Sign in\n          </Button>\n        </div>\n      </Form>\n    )\n  }\n}\n\nexport default Signin;\n","import React, { Component } from 'react'\nimport { Typography, Link } from '@material-ui/core';\nimport Signin from './Signin';\nimport '../Styles/Signin.css'\n\nclass SiginCard extends Component {\n  render() {\n    return (\n      <div className = \"signin text-center\">\n      <div className=\"upper-heading\">\n        <Typography className=\"heading-text\" >Propagate</Typography> <br/>\n        <Typography className=\"sub-heading-text1\" >Uniting Thoughts...</Typography>\n      </div>\n      <div className = \"middle-text\">\n      <Typography variant=\"h5\" className=\"sub-heading-text2\" gutterBottom>Welcome to Blogsters</Typography>\n      <Signin updateViewState={this.props.updateViewState}/>\n      <Typography variant=\"caption\" display=\"block\" className = \"separater\" gutterBottom>--------------------- or ----------------------</Typography>\n        <div className=\"google-signIn\">\n          <img src=\"https://img.icons8.com/clouds/100/000000/google-logo.png\" alt=\"First slide\" className=\"google-img\"/>\n          <Typography variant=\"caption\" gutterBottom className = \"sign-in\">\n            Sign in with Google\n          </Typography>\n        </div>\n      </div>\n      <div className=\"bottom-text\">\n      <Typography gutterBottom>\n        New Blogster? <Link href=\"#\" onClick={() => {this.props.updateViewState(\"SignUp\")}} className = \"create-account\" color=\"inherit\">Create Account</Link>\n      </Typography>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default SiginCard;\n","import React from 'react'\nimport { Carousel } from 'react-bootstrap';\nimport '../Styles/CarauselCard.css'\n\nvar CarouselCard = () => {\n  return(\n    <Carousel className = \"carausel\" fade = \"true\">\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"food.jpg\"\n      alt=\"First slide\"\n    />\n    <Carousel.Caption>\n      <h3>Welcome People</h3>\n      <p>Where creativity gets wings</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"book-bindings.jpg\"\n      alt=\"Second slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Welkom mensen</h3>\n      <p>Waar creativiteit vleugels krijgt</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"compass.jpeg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>लोगों का स्वागत करते हैं</h3>\n      <p>जहां रचनात्मकता को पंख लग जाते हैं</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"table.jpg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Bienvenido gente</h3>\n      <p>Donde la creatividad tiene alas</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n  )\n}\n\nexport default CarouselCard;\n","import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { Button, TextField } from '@material-ui/core';\nimport { RestConstants } from '../Constants/application.constants';\n\nclass Signup extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      nameValue: \"\",\n      username: \"\",\n      usernameValue: \"\",\n      email: \"\",\n      emailValue: \"\",\n      password: \"\",\n      passwordValue: \"\",\n      redirect: false,\n      avatar: 1,\n    }\n  }\n\n  handleChange = (event) => {\n    if(event.target.name === \"Users_name_helper\") {\n      this.setState({nameValue: event.target.value})\n    } \n\n    if(event.target.name === \"name_helper\") {\n      if(event.target.value === \"\") {\n        this.setState({\n          username: \"UserName Field Is Mandatory\",\n          usernameValue: \"\"\n        });\n      }\n      else {\n        this.setState({\n          username: \"\",\n          usernameValue: event.target.value\n        });\n      }\n    }\n    if(event.target.name === \"email_helper\") {\n      if(event.target.value ===\"\") {\n        this.setState({email: \"Email is Mandatory\", emailValue: \"\"});\n      }\n      else {\n        this.setState({\n          email: \"\",\n          emailValue: event.target.value\n        });\n      }\n    }\n    if(event.target.name === \"password_helper\") {\n      if(event.target.value ===\"\") {\n        this.setState({password: \"Password is Mandatory\", passwordValue: \"\"});\n      }\n      else {\n        this.setState({\n          password: \"\",\n          passwordValue: btoa(event.target.value)\n        });\n      }\n    }\n    if(this.state.usernameValue=== \"\" || this.state.emailValue === \"\" || this.state.passwordValue === \"\" || this.state.nameValue === \"\") {\n      return false;\n    }\n    return true;\n  }\n\n  saveUser = async () => {\n    let avatar = (Math.floor(Math.random() * 7) + 1);\n    this.setState({avatar: avatar})\n    const data = {\n      UserName: \"\",\n      Email: \"\",\n      Password: \"\",\n      Name: this.state.nameValue,\n      Avatar: avatar\n    }\n    data.UserName=this.state.usernameValue;\n    data.Email = this.state.emailValue;\n    data.Password = this.state.passwordValue;\n    let response = await fetch(RestConstants.SAVE_USER, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accpet': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).catch(error => {});\n    return await response.json();\n  }\n\n  submitData = async (event) => {\n    if(this.handleChange(event) === true) {\n      const data = await this.saveUser();\n      if (data.Status === 3002) {\n        alert(\"Username not available\");\n      }\n      else if(data.Status === 3004) {\n        alert(\"Email already present kindly sign in\");\n      }\n      else {\n        localStorage.setItem('username', this.state.usernameValue);\n        localStorage.setItem('password', this.state.password);\n        localStorage.setItem('name', this.state.nameValue);\n        localStorage.setItem('avatar', this.state.avatar)\n        this.setState({redirect: true});\n      }\n    }\n    else {\n      alert(\"Mandatory Fields are Empty or Invalid Data!\");\n    }\n  }\n\n  render() {\n    if(this.state.redirect) {\n      return <Redirect action=\"REPLACE\" to={{\n        pathname: '/mainPage',\n        state: { \n          auth: true,\n          activeTab: \"Home\"\n         }\n    }} />;\n    }\n    return(\n      <Form id=\"form-signup\">\n        <div className = \"userName\">\n          <TextField label=\"Name\" placeholder=\"Name\" name=\"Users_name_helper\" id=\"outlined-size-normal\" color=\"primary\" onChange={this.handleChange}/>\n        </div>\n        <div className = \"userEmail\">\n          <TextField helperText={this.state.username} name=\"name_helper\" label=\"UserName\" id=\"outlined-size-normal\" color=\"primary\" onChange={this.handleChange}/>\n        </div>\n        <div className = \"userEmailSignUp\">\n          <TextField helperText={this.state.email} name=\"email_helper\" label=\"Email\" id=\"outlined-size-normal\" onChange={this.handleChange}/>\n        </div>  \n        <div className = \"userPasswordSignUp\"> \n          <div>\n              <TextField helperText={this.state.password} type=\"password\" name=\"password_helper\" label=\"Password\" id=\"outlined-size-normal\" onChange={this.handleChange}/>\n          </div> \n        </div>\n        <div className=\"button-singUp\">\n          <Button onClick={this.submitData} className = \"button-internal-singUp\" color=\"primary\">\n            Sign up\n          </Button>\n        </div>\n      </Form>\n    )\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport Signup from './Signup';\nimport '../Styles/Signup.css'\n\nclass SignupCard extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"upper-heading-signup\">\n                    <Typography className=\"heading-text-signup\" >Propagate</Typography> <br/>\n                    <Typography className=\"sub-heading-text1-signup\" >Uniting Thoughts...</Typography>\n                </div>\n                <div className = \"middle-text-signup\">\n                <Typography variant=\"h5\" className=\"sub-heading-text2-singup\" gutterBottom>Here To Get Welcomed !</Typography>\n                <Signup />\n                <div className=\"bottom-text-signUp\">\n                    <Link href=\"#\" variant=\"caption\" className = \"sign-up\" onClick={() => {this.props.updateViewState(\"SignIn\")}} >\n                    Already Have An Account? Sign-In\n                    </Link>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignupCard;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport '../Styles/ContinueToLogin.css'\n\nexport default function ContinueToLogin(props) {\n\n  return (\n    <div className=\"button\">\n      <Button onClick={() => { props.updateViewState(\"SignIn\") }} \n        className=\"button-internal\" color=\"inherit\" >\n        Continue\n        </Button>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport '../Styles/ForgotPassword.css';\nimport { TextField, Button, Typography, Link } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nclass ForgotPasswordPage extends Component {\n    constructor() {\n      super();\n      this.state = {\n        username: \"\",\n        usernameHelperText: \"\", \n        showOtp: false,\n        buttonText: \"Send Email\"\n      }\n    } \n\n    sendEmail = (event) => {\n      this.setState({\n        showOtp: true,\n        buttonText: \"Submit\"\n      });\n    }\n    \n    handleChange = (event) => {\n      if(event.target.name === \"username\") {\n        if(event.target.value === \"\") {\n          this.setState({usernameHelperText: \"Username is mandatory\"});\n        }\n        else {\n          this.setState({usernameHelperText: \"\"});\n        }\n        this.setState({username: event.target.value});\n      }\n    }\n\n    render() {\n      return(\n        <div>\n          <div className=\"back_button_div\" onClick={() => {this.props.updateViewState(\"SignIn\")}}> <Button className=\"back_button\" startIcon={<ArrowBackIcon/>}>Back</Button> </div>\n          <div className=\"upper-heading\">\n            <Typography className=\"heading-text\" >Propagate</Typography> <br/>\n            <Typography className=\"sub-heading-text1\" >Uniting Thoughts...</Typography>\n          </div>\n          <div className=\"forgot_password_form\">\n            <div className=\"textField\"><TextField name=\"username\" helperText={this.state.usernameHelperText} label=\" Enter UserName\" className=\"textField\" id=\"outlined-size-normal\" color=\"primary\" onChange={this.handleChange}/></div>\n            {this.state.showOtp && <div className=\"textField\"> <TextField label=\"Enter Otp\" id=\"outlined-size-normal\" color=\"primary\" /> </div>}  <br/>\n            <div className=\"email_button_div\"><Button className=\"email_button\" onClick={this.sendEmail}>{this.state.buttonText}</Button></div>\n          </div>\n          <div className=\"bottom-text_inherit\">\n          <Typography gutterBottom>\n            New Blogster? <Link href=\"#\" onClick={() => {this.props.updateViewState(\"SignUp\")}} className = \"create-account\" color=\"inherit\">Create Account</Link>\n          </Typography>\n          </div>\n        </div>\n      )\n    }\n  }\n  \n  export default ForgotPasswordPage;","import React, { Component } from 'react';\nimport SigninCard from './SigninCard'\nimport CarouselCard from './CarouselCard'\nimport SignupCard from './SignupCard'\nimport ContinueToLogin from './ContinueToLogin';\nimport ForgotPasswordPage from './ForgotPasswordPage';\nimport '../Styles/Landing.css'\n\nclass Landing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      whichPage: \"SignIn\"\n    };\n  }\n\n  changeViewState(stateName){\n    this.setState({whichPage: stateName});\n  }\n\n  render() {\n    const { whichPage } = this.state;\n    return(\n      <div className=\"Landing\">\n        <div className=\"CarouselCard\" active-view={whichPage}><CarouselCard/></div>\n        {whichPage === \"ContinueToLogin\" && <div className=\"ContinueToLogin\" active-view={whichPage}><ContinueToLogin updateViewState={(stateName) => {this.changeViewState(stateName)}}/></div>}\n        {whichPage === \"SignIn\" && <div className=\"SignInCard\"><SigninCard updateViewState={(stateName) => {this.changeViewState(stateName)}}/></div>}\n        {whichPage === \"SignUp\" && <div className=\"SignUpCard\"><SignupCard updateViewState={(stateName) => {this.changeViewState(stateName)}}/></div> }\n        {whichPage === \"ForgotPassword\" && <div className=\"ForgotPasswordPage\"><ForgotPasswordPage updateViewState={(stateName) => {this.changeViewState(stateName)}}/></div> }\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React from 'react';\nimport Landing from './Components/Landing';\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className = \"main\">\n      <div className = \"background-image\" style={{backgroundImage: `url(table.jpg)`}}></div>\n      <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport '../Styles/CreatePost.css'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TextField, Button, Link } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { RestConstants } from '../Constants/application.constants';\n\nclass CreatePost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            titleHelper: \"Title Here!\",\n            titleShow: true,\n            description: \"\" ,\n            descriptionHelper: \"What's happening?\"\n        }\n    }\n\n    handleChange = (event) => {\n        if(event.target.name === \"postTitle\") {   \n            this.setState({title: event.target.value})\n        }\n        else {\n            this.setState({description: event.target.value})\n        }\n    }\n\n    savePost = () => {\n        let data = {\n            Title: this.state.title,\n            Name: localStorage.getItem('name'),\n            Description: this.state.description,\n            Avatar: parseInt(localStorage.getItem('avatar')),\n            UserName: localStorage.getItem('username')\n        }\n        fetch(RestConstants.SAVE_POST, {\n            method: 'POST',\n            headers: { \n              'Content-Type': 'application/json', \n              'Accept': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => response.json()).then(data => {\n            if (data.Status === 3015) {\n                this.props.updateViewState();\n                alert(\"Post Saved Successfully\");\n            }   \n            else if(data.Status === 3014) {\n                alert(\"Invalid Data Added\");\n            }\n            else {\n                alert(\"Some Error Occurred Please try again!\");\n            }\n        }).catch(error => {});\n    }\n\n    checkPost = (event) => {\n        if(this.state.title === \"\" || this.state.description === \"\") {\n            alert(\"Title and description is mandatory\");\n        }\n        else {\n            this.savePost();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"createPostMain\">\n                <div className = \"postTitle\">\n                    <Link onClick={() => {this.props.updateViewState()}}><CloseIcon fontSize=\"large\" style={{ color: green[500]}} className=\"cancelButton\"/></Link>\n                    <TextField placeholder={this.state.titleHelper} className = \"postTitleBox\" name=\"postTitle\" id=\"outlined-size-normal\" color=\"primary\" variant=\"outlined\" onChange={this.handleChange}/>\n                </div>\n                <div className = \"postData\">\n                    <div style={{ height: `6vh`,\n                        marginTop: `1vh`,\n                        marginLeft: `1vh`,\n                        marginRight: `0.7vw`,\n                        width: `6vh`,\n                        borderRadius: `500vw`,\n                        position: `absolute`,\n                        backgroundColor: `white`,\n                        backgroundImage: `url(../Avatars/avatar`+localStorage.getItem('avatar')+`.svg)`}}></div>\n                    <TextField placeholder={this.state.descriptionHelper} className = \"postDataBox\" name=\"postData\" id=\"outlined-size-normal\" variant=\"outlined\" multiline rows={8} onChange={this.handleChange}/>\n                </div>  \n                <div className=\"postBottom\">\n                    <Button className=\"postButton\" onClick={this.checkPost}>Post</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreatePost;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { green , red} from '@material-ui/core/colors';\n// import ExploreIcon from '@material-ui/icons/Explore';\n// import ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { Redirect } from 'react-router';\nimport SavePost from './CreatePost';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport '../Styles/NavBar.css'\nimport { Button } from '@material-ui/core';\n\nclass NavBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: this.props.activeTab,\n            redirect: false,\n            submitPost: false\n        }\n    }\n\n    handleClick = param => event => {\n        if (this.state.activeTab !== param) {\n            this.setState({redirect: true, activeTab: param})\n        }   \n    }\n\n    showHidePost(){\n        this.setState({submitPost : this.state.submitPost ? false : true})\n    }\n\n\n    render() {\n        if(this.state.redirect ) {\n            if(this.state.activeTab === \"LogOut\") {\n                localStorage.removeItem(\"username\");\n                localStorage.removeItem(\"password\");\n                localStorage.removeItem(\"name\");\n                localStorage.removeItem(\"avatar\");\n                return <Redirect to={{\n                    pathname: '/',\n                    state: { \n                        loggedOut: true\n                    }\n                }} replace/>;\n            }\n            return <Redirect to={{\n              pathname: '/mainPage/' + this.state.activeTab,\n              state: { \n                auth: this.props.authorised,\n                activeTab: this.state.activeTab\n               }\n          }} replace/>;\n        }\n\n        return(\n        <div className=\"navbarMain\">\n            <div className=\"navHeading\"><h1>Propagate</h1></div> <br/> \n            <div className=\"navbarList\">\n                <List>\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"Home\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Home\" ? <HomeIcon  style={{ color: green[500]}}/> : <HomeOutlinedIcon/> } </ListItemIcon>\n                        <ListItemText  primary=\"Home\" />\n                    </ListItem>\n                    {/* <ListItem className=\"listItems\" button onClick={this.handleClick(\"Explore\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Explore\" ? <ExploreIcon  style={{ color: green[500]}}/> : <ExploreOutlinedIcon/> }</ListItemIcon>\n                        <ListItemText primary=\"Explore\" />\n                    </ListItem> */}\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"Messages\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Messages\" ? <ForumIcon  style={{ color: green[500]}}/> : <ForumOutlinedIcon/> }</ListItemIcon>\n                        <ListItemText  primary=\"Messages\" />\n                    </ListItem>\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"Notifications\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Notifications\" ? <NotificationsActiveIcon  style={{ color: green[500]}}/> : <NotificationsOutlinedIcon/> }</ListItemIcon>\n                        <ListItemText  primary=\"Notifications\" />\n                    </ListItem>\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"Profile\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Profile\" ? <AccountBoxIcon  style={{ color: green[500]}}/> : <PermIdentityOutlinedIcon/> }</ListItemIcon>\n                        <ListItemText  primary=\"Profile\" />\n                    </ListItem>\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"Saved\")}>\n                        <ListItemIcon>{this.state.activeTab === \"Saved\" ? <BookmarkIcon  style={{ color: red[60]}}/> : <BookmarkBorderIcon/> }</ListItemIcon>\n                        <ListItemText  primary=\"Saved\" />\n                    </ListItem>\n                    <ListItem className=\"listItems\" button onClick={this.handleClick(\"LogOut\")}>\n                        <ListItemIcon><ExitToAppIcon  style={{ color: green[500]}}/></ListItemIcon>\n                        <ListItemText  primary=\"LogOut\" />\n                    </ListItem>\n                </List>\n            <div className=\"navPostButton\"> <Button className=\"navInternalButton\" onClick={() => this.showHidePost()}>Propagate</Button> </div> \n            {this.state.submitPost && <div className=\"createPost\"><SavePost updateViewState={() => {this.showHidePost()}}/></div> }\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default NavBar;","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { red, green } from '@material-ui/core/colors';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport '../Styles/HomePage.css'\n\nclass PostCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userDetails: this.props.userDetails,\n            postID: this.props.value.postid,\n            toggleFavourite: ((this.props.userDetails.likedposts) && (this.props.userDetails.likedposts.length !== 0) && (this.props.userDetails.likedposts.indexOf(this.props.value.postid) !== -1)) ? true: false,\n            toggleBookmark: ((this.props.userDetails.savedposts) && (this.props.userDetails.savedposts.length !== 0) && (this.props.userDetails.savedposts.indexOf(this.props.value.postid) !== -1)) ? true : false,\n            toggleChat: false,\n            toggleSend: false,\n            postDetails : this.props.value\n        }\n    }\n\n    getDateTime(value) {\n        var timeRange = (new Date().getTime() - (value.updatedtimestamp * 1000));\n        timeRange = timeRange / 1000;\n        if (timeRange < 60) {\n             return timeRange.toString() + \" s\"\n        } \n        else if (timeRange < 3600) {\n            return Math.round(timeRange/60).toString() + \"m\"\n        }\n        else if (timeRange < (3600 * 24)) {\n            return Math.round(timeRange/(3600)).toString() + \"h\"\n        }\n        else {\n            return Math.round(timeRange / (3600 * 24)).toString() + \"d\"\n        }\n     }\n\n    toggleFavourite = () => {\n        if(this.state.toggleFavourite === false) {\n            const postRequest = {\n                UserName: localStorage.getItem('username'),\n                PostId: parseInt(this.state.postID)\n            }\n            fetch(\"/saveLikesToDB\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n              }).then(response => response.json()).then(res => {\n                if (res.Status === 3013) {\n                    this.setState({toggleFavourite : true})\n                } \n            }).catch(error => {});\n        }\n        else {\n            const postRequest = {\n                UserName: localStorage.getItem('username'),\n                PostId: parseInt(this.state.postID)\n            }\n            fetch(\"/deleteLikesFromDB\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n              }).then(response => response.json()).then(res => {\n                if (res.Status === 3013) {\n                    this.setState({toggleFavourite : false})\n                } \n            }).catch(error => {});\n        }\n        if(this.props.calledBy === \"SavedPostPage\") {\n            this.props.updateViewState();\n        }\n    } \n\n    toggleBookmark = () => {\n        if(this.state.toggleBookmark === false) {\n            const postRequest = {\n                UserName: localStorage.getItem('username'),\n                PostId: parseInt(this.state.postID)\n            }\n            fetch(\"/saveBookmarksToDB\", {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n            }).then(response => response.json()).then(res => {\n                if (res.Status === 3013) {\n                    this.setState({toggleBookmark : true})\n                } \n            }).catch(error => {});\n        }\n        else {\n            const postRequest = {\n                UserName: localStorage.getItem('username'),\n                PostId: parseInt(this.state.postID)\n            }\n            fetch(\"/deleteBookmarksFromDB\", {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n            }).then(response => response.json()).then(res => {\n                if (res.Status === 3013) {\n                    this.setState({toggleBookmark : false})\n                } \n            }).catch(error => {});\n        }\n    } \n    \n    toggleChat = () => {\n        this.setState({toggleChat : this.state.toggleChat ? false : true})\n    }\n\n    toggleSend = () => {\n        this.setState({toggleSend : this.state.toggleSend ? false : true})\n    }   \n\n    render () {\n        return (\n            <div className = \"SinglePropagate\">\n                <div className=\"propagateFiddle\">\n                    <div style={{\n                        backgroundImage: `url(../Avatars/avatar`+this.props.value.avatar+`.svg)`,\n                        height: `5vh`,\n                        marginTop: `0.2vh`,\n                        marginLeft: `1vh`,\n                        marginRight: `0.7vw`,\n                        width:`5vh`,\n                        borderRadius: `500vw`\n                    }}></div>\n                    <div className=\"profileOtherData\">\n                        <div className=\"propagateHeading\"><Typography className=\"PostCardName\" variant=\"h6\" component=\"h5\">\n                            {this.state.postDetails.name} \n                            </Typography> \n                            <Typography className=\"PostCardUserName\" color=\"textSecondary\">\n                            @{this.state.postDetails.username}\n                            </Typography>  <Typography className=\"PostCardUserName\" color=\"textSecondary\">{this.getDateTime(this.state.postDetails)}</Typography>\n                        </div>\n                        <div className=\"propagateTitle\"><Typography>{this.state.postDetails.title}</Typography></div>\n                        <div className=\"propagateDescription\">{this.state.postDetails.description}</div>\n                        <div className=\"propagateOptions\">\n                        <div className=\"FavouriteItemButton\" onClick = {() => this.toggleFavourite()}><Link>{this.state.toggleFavourite ? <FavoriteIcon style={{ color: red[500]}}/> :<FavoriteBorderIcon/>}</Link></div>\n                            <div className=\"ChatItemButton\"onClick = {() => this.toggleChat()}><Link><ChatOutlinedIcon/></Link></div>{this.toggleChat && <div className=\"\"></div>}\n                            <div className=\"SendItemButton\"onClick = {() => this.toggleSend()}><Link><SendOutlinedIcon/></Link></div>\n                            <div className=\"SavedItemButton\"onClick = {() => this.toggleBookmark()}><Link>{this.state.toggleBookmark ? <BookmarkIcon style={{ color: green[500]}}/> :<BookmarkBorderOutlinedIcon/>}</Link></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostCard;","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport PostCard from './PostCard';\n\nclass Explore extends React.Component {\n    constructor(props) {\n        super(props);\n        let value = {\"updatedtimestamp\": 234532423432467, \"username\": \"pokemon\" , \"title\": \"Yeah\" , \"description\": \"qeqwe\"};\n        this.state = {\n            savedPosts: [value,value,value]\n        }    \n    }\n\n    render() {\n        let savedPosts = this.state.savedPosts;\n        if (savedPosts.length === 0) {\n            return (\n                <div className=\"emptySavedPosts\">\n                    <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                    Something Went Wrong !\n                    </Typography>\n                    <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                    Nothing to show.\n                    </Typography>\n                </div>\n            )\n        }\n        return(\n            <div className=\"HomeOuterClass\">\n                <div className = \"innerShell\">\n                    <div className=\"propogates\">\n                    {savedPosts.map((value, index) => {\n                    return  <PostCard value = {value}/>\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Explore;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport '../Styles/MessagesPage.css'\n\nclass MessagesPage extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"messagesDrawer\">\n                    <div className=\"internalMessagesDrawer\">\n                    <Card className=\"classMain\">\n                        <CardContent>\n                            <Typography className=\"T1\" variant=\"h5\" component=\"h2\">\n                            Send a message, get a message !\n                            </Typography>\n                            <Typography className=\"T2\" color=\"textSecondary\">\n                            Direct Messages are private conversations between you and other people on Propagate. Share posts and more!\n                            </Typography>\n                        </CardContent>\n                        <CardActions >\n                            <Button className=\"cardButton\" size=\"small\">Start a conversation</Button>\n                        </CardActions>\n                    </Card>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MessagesPage;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../Styles/NotificationPage.css'\n\nclass NotificationPage extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"messagesDrawer\">\n                    <div className=\"internalMessagesDrawer\">\n                    <Card className=\"classMainNotifications\">\n                        <CardContent>\n                            <Typography className=\"T1\" variant=\"h5\" component=\"h2\">\n                            No notifications Yet !\n                            </Typography>\n                            <Typography className=\"T2\" color=\"textSecondary\">\n                            All the notifications of people you follow will be visible here!\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotificationPage;","import React from 'react';\nimport { RestConstants } from '../Constants/application.constants';\nimport {Typography} from '@material-ui/core';\nimport ReactLoading from \"react-loading\";\nimport PostCard from './PostCard';\n\nclass MyPosts extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userDetails: this.props.userDetails,\n            size: 10,\n            page: 1,\n            savedPosts: [],\n            fetchedSuccess: 0\n        }    \n    }\n\n    fetchMyPosts = () => {\n        if(this.props.userDetails.createdposts === undefined || this.props.userDetails.createdposts === 0) {\n            this.setState({fetchedSuccess: 1});\n        }\n        else {\n        const postRequest = {\n            PostIds: this.props.userDetails.createdposts,\n            Size: this.state.size,\n            page: this.state.page\n        }\n        fetch(RestConstants.FETCH_POST_BY_POSTIDS, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n              if(res.Status === 3000) {\n                this.setState({savedPosts: res.Data, fetchedSuccess: 1});\n              }\n          }).catch(error => {});\n        }\n    }\n\n    componentDidMount() {\n        this.setState({userDetails: this.props.userDetails});\n        if(this.state.userDetails.createdposts !== null) {\n            this.fetchMyPosts();\n        }\n    }\n\n    render() {\n        let {savedPosts} = this.state;\n        if(this.state.fetchedSuccess !== 1) {\n            return (\n                <div style={{textAlign:`center`, width: `100%`,height: `100%`, paddingLeft: `45%`, marginTop: `10%`}}><ReactLoading type={\"bars\"} color={\"yellowgreen\"} /></div>\n            )\n        }\n        if (savedPosts.length === 0) {\n            return (\n                <div className=\"emptySavedPosts\">\n                    <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                    You haven’t propagated anything Yet !\n                    </Typography>\n                    <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                    Click on propagate to post your first post.\n                    </Typography>\n                </div>\n            )\n        }\n        return(\n            <div className=\"HomeOuterClass\">\n                <div className = \"innerShell\">\n                    <div className=\"propogates\">\n                    {savedPosts.map((value, index) => {\n                    return  <PostCard value = {value} userDetails = {this.props.userDetails}/>\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}   \n\nexport default MyPosts;","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport { RestConstants } from '../Constants/application.constants';\nimport ReactLoading from \"react-loading\";\nimport PostCard from './PostCard';\n\nclass MyLikes extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userDetails: this.props.userDetails,\n            size: 10,\n            page: 1,\n            likedPosts: [],\n            fetchPostDetails: 0\n        }    \n    }\n\n    fetchMyPosts = () => {\n        if(this.state.userDetails.likedposts === undefined || this.state.userDetails.likedposts.length === 0) {\n            this.setState({fetchPostDetails: 1});\n        }\n        else {\n        const postRequest = {\n            PostIds: this.props.userDetails.likedposts,\n            Size: this.state.size,\n            page: this.state.page\n        }\n        fetch(RestConstants.FETCH_POST_BY_POSTIDS, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n              if(res.Status === 3000) {\n                this.setState({likedPosts: res.Data, fetchPostDetails: 1});\n              }\n          }).catch(error => {});\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        this.setState({userDetails: this.props.userDetails});\n        if(this.state.userDetails.likedposts !== null) {\n            this.fetchMyPosts();\n        }\n    }\n\n    render() {\n        let likedPosts = this.state.likedPosts;\n        if(this.state.fetchPostDetails !== 1) {\n            return (\n                <div style={{textAlign:`center`, width: `100%`,height: `100%`, paddingLeft: `45%`, marginTop: `10%`}}><ReactLoading type={\"bars\"} color={\"yellowgreen\"} /></div>\n            )\n        }\n        if (likedPosts.length === 0) {\n            return (\n                <div className=\"emptySavedPosts\">\n                    <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                    You don’t have any likes yet !\n                    </Typography>\n                    <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                    Tap the heart on any Propagate to show it some love. When you do, it’ll show up here.\n                    </Typography>\n                </div>\n            )\n        }\n        return(\n            <div className=\"HomeOuterClass\">\n                <div className = \"innerShell\">\n                    <div className=\"propogates\">\n                    {likedPosts.map((value, index) => {\n                    return  <PostCard value = {value} userDetails = {this.props.userDetails}/>\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyLikes;","import React from 'react';\nimport {Typography, Button, Link} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport '../Styles/MyAvatar.css';\n\nclass MyAvatar extends React.Component {\n\n    constructor() {\n        super();\n        this.state={\n            avatar: localStorage.getItem(\"avatar\"),\n            username: localStorage.getItem(\"username\")\n        }\n    }\n\n    choose = (avatar) => {\n        this.setState({avatar: avatar})\n    }\n\n    saveAvatar = () => {\n        const avatarRequest = {\n            UserName: this.state.username,\n            Avatar: parseInt(this.state.avatar)\n        }\n        fetch(\"/updateAvatar\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(avatarRequest)\n          }).then(response => response.json()).then(res => {\n              if(res.Status === 3013) {\n                localStorage.setItem(\"avatar\",this.state.avatar)\n                this.props.updateAvatar(this.state.avatar)\n              }\n          }).catch(error => {});\n    }\n\n    render() {\n        return (\n            <div className=\"emptySavedPosts\">\n                <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                Look on your Right <ArrowForwardIcon fontSize=\"large\"  style={{ color: green[500]}}/>\n                </Typography>\n                <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                Customise your avatar if you don't like the one we selected for you.\n                </Typography>\n                <div className=\"AvatarSelector\">\n                    <Typography className=\"MyAvatarHeading\" variant=\"h5\" component=\"h2\">\n                    Choose an Avatar\n                    </Typography>\n                    <div className=\"AvatarPics\">\n                        <div className=\"first3Avatars\">\n                            <Link onClick={() => this.choose(\"1\")} style={{\n                                backgroundImage: `url(../Avatars/avatar1.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"1\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                            <Link onClick={() => this.choose(\"2\")} style={{\n                                backgroundImage: `url(../Avatars/avatar2.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"2\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                            <Link onClick={() => this.choose(\"3\")} style={{\n                                backgroundImage: `url(../Avatars/avatar3.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"3\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                        </div>\n                        <div className=\"second3Avatars\">\n                            <Link onClick={() => this.choose(\"4\")} style={{\n                                backgroundImage: `url(../Avatars/avatar4.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"4\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                            <Link onClick={() => this.choose(\"5\")} style={{\n                                backgroundImage: `url(../Avatars/avatar5.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"5\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                            <Link onClick={() => this.choose(\"6\")} style={{\n                                backgroundImage: `url(../Avatars/avatar6.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"6\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                        </div>\n                        <div className=\"last2Avatars\">\n                            <Link onClick={() => this.choose(\"7\")} style={{\n                                backgroundImage: `url(../Avatars/avatar7.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"7\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                            <Link onClick={() => this.choose(\"8\")} style={{\n                                backgroundImage: `url(../Avatars/avatar8.svg)`,\n                                backgroundColor: `white`,\n                                height: `13vh`,\n                                marginTop: `0.5vh`,\n                                marginRight: `0.7vw`,\n                                marginLeft: `2vw`,\n                                zIndex: `3`,\n                                width:`13vh`,\n                                borderRadius: `500vw`,\n                                border: this.state.avatar === \"8\" ?`4px solid yellowgreen` : `0px solid yellowgreen`\n                            }}></Link>\n                        </div>\n                        <Button className=\"SaveAvatar\" onClick={() => this.saveAvatar()} >Save Avatar</Button>    \n                    </div>\n                </div>\n            </div>\n        )   \n    }\n}\n\nexport default MyAvatar;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MyPosts from './MyPosts';\nimport MyLikes from './MyLikes';\nimport { RestConstants } from '../Constants/application.constants';\nimport MyAvatar from './MyAvatar';\nimport '../Styles/Profile.css'\n\nclass Profile extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let selectedPage = localStorage.getItem('profilepageview')\n        if (selectedPage === null) {\n            selectedPage = \"Post\"\n        }\n        this.state = {\n            userDetails: \"\",\n            followers: localStorage.getItem('followers') !== null ? localStorage.getItem('followers') : 0,\n            following: localStorage.getItem('following') !== null ? localStorage.getItem('following') : 0,\n            postNavbarClass: selectedPage === \"Post\" ? \"userDetilsNavButtonSelected\" : \"userDetilsNavButton\",\n            postNavbarTextClass: selectedPage === \"Post\" ? \"postsTextSelected\" : \"postsText\",\n            likesNavbarClass: selectedPage === \"Likes\" ? \"userDetilsNavButtonSelected\" : \"userDetilsNavButton\",\n            likeNavbarTextClass: selectedPage === \"Likes\" ? \"likesTextSelected\" : \"likesText\",\n            avatarNavbarClass: selectedPage === \"Avatar\" ? \"userDetilsNavButtonSelected\" : \"userDetilsNavButton\",\n            avatarNavbarTextClass: selectedPage === \"Avatar\" ? \"avatarTextSelected\" : \"avatarText\",\n            currentlySelected: selectedPage,\n            Avatar: localStorage.getItem('avatar')\n        }\n    }\n\n    fetchUserDetails = () => {\n        const postRequest = {\n            UserName: localStorage.getItem('username')\n        }\n        fetch(RestConstants.FETCH_USER, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n            if (res.Status ===3000) {\n                localStorage.setItem('avatar', res.Data.avatar)\n                if(res.Data.followers === undefined) {\n                    res.Data.followers = []\n                }\n                if(res.Data.following === undefined) {\n                    res.Data.following = []\n                }\n                localStorage.setItem('followers', res.Data.followers.length)\n                localStorage.setItem('following', res.Data.following.length)\n                this.setState({userDetails: res.Data, Avatar: localStorage.getItem('avatar')})\n            } \n        }).catch(error => {});\n    }\n\n    componentDidMount() {\n        this.fetchUserDetails()\n    }\n\n    selectPost = () => {\n        this.setState({\n            postNavbarClass: \"userDetilsNavButtonSelected\",\n            postNavbarTextClass: \"postsTextSelected\",\n            likesNavbarClass: \"userDetilsNavButton\",\n            likeNavbarTextClass: \"likesText\",\n            avatarNavbarClass: \"userDetilsNavButton\",\n            avatarNavbarTextClass: \"avatarText\",\n            currentlySelected: \"Post\"\n        })\n        localStorage.setItem('profilepageview', 'Post')\n    }\n\n    selectLikes = () => {\n        this.setState({\n            postNavbarClass: \"userDetilsNavButton\",\n            postNavbarTextClass: \"postsText\",\n            likesNavbarClass: \"userDetilsNavButtonSelected\",\n            likeNavbarTextClass: \"likesTextSelected\",\n            avatarNavbarClass: \"userDetilsNavButton\",\n            avatarNavbarTextClass: \"avatarText\",\n            currentlySelected: \"Likes\"\n        })\n        localStorage.setItem('profilepageview', 'Likes')\n    }\n\n    selectAvatar = () => {\n        this.setState({\n            postNavbarClass: \"userDetilsNavButton\",\n            postNavbarTextClass: \"postsText\",\n            likesNavbarClass: \"userDetilsNavButton\",\n            likeNavbarTextClass: \"likesText\",\n            avatarNavbarClass: \"userDetilsNavButtonSelected\",\n            avatarNavbarTextClass: \"avatarTextSelected\",\n            currentlySelected: \"Avatar\"\n        })\n        localStorage.setItem('profilepageview', 'Avatar')\n    }\n\n    updateAvatar = (avatar) => {\n        this.setState({Avatar: avatar})\n    }\n\n    render() {\n        var months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n        var joinedDate = new Date(this.state.userDetails.createdtimestamp * 1000);\n        return (\n            <div className=\"profileBody\">\n                <div className=\"profileCard\">\n                    <div style={{\n                        backgroundImage: `url(../Avatars/avatar`+localStorage.getItem('avatar')+`.svg)`,\n                        backgroundColor: `white`,\n                        height: `15vh`,\n                        marginTop: `0.5vh`,\n                        marginRight: `0.7vw`,\n                        marginLeft: `2vw`,\n                        zIndex: `3`,\n                        width:`15vh`,\n                        borderRadius: `500vw`,\n                        border: `2px solid yellowgreen`\n                    }}></div>\n                    <div style={{display: `flex`,marginLeft: `1.8vw`, textAlign: `center`}}>\n                    <Typography className=\"PostCardName\" variant=\"h6\" component=\"h5\">\n                            {this.state.userDetails.name}\n                    </Typography> \n                    <Typography className=\"PostCardUserName\" style={{marginTop: '0.3vh'}} color=\"textSecondary\">\n                        @{this.state.userDetails.username}\n                    </Typography>\n                    </div>\n                    <Typography className=\"PostCardUserName\" color=\"textSecondary\" style={{marginTop: '0.5vh'}}>\n                        <DateRangeIcon/> Joined {months[joinedDate.getMonth()]} {joinedDate.getFullYear()}\n                    </Typography>\n                    <div className=\"followerFollowing\" style={{marginTop: '0.5vh'}}>\n                        <div className=\"following\"> <b>{this.state.following }</b> <Typography className=\"followingInt\" color=\"textSecondary\">Following</Typography></div>\n                        <div className=\"followers\"> <b>{this.state.followers }</b> <Typography className=\"followerInt\" color=\"textSecondary\">Followers</Typography></div>\n                    </div>\n                </div>\n                <div className=\"headerDiv\"></div>\n                <div className=\"UserDetails\"></div>\n                <div className=\"UserDetailsCard\">\n                <List className=\"userDetilsNav\">\n                    <ListItem onClick={this.selectPost} button className={this.state.postNavbarClass}>\n                        <ListItemText className={this.state.postNavbarTextClass} primary=\"Posts\" />\n                    </ListItem>\n                    <ListItem onClick={() => this.selectLikes()} button className={this.state.likesNavbarClass}>\n                        <ListItemText className={this.state.likeNavbarTextClass} style={{marginLeft: `3vw`}} inset primary=\"Likes\" />\n                    </ListItem>\n                    <ListItem onClick={() => this.selectAvatar()} button className={this.state.avatarNavbarClass}>\n                        <ListItemText className={this.state.avatarNavbarTextClass} style={{marginLeft: `2vw`, fontColor: `red !important`}} inset primary=\"My Avatar\" />\n                    </ListItem>\n                </List>\n                </div>\n                <div className=\"bottomSelectedOption\">\n                    {this.state.userDetails !== \"\" && this.state.currentlySelected === \"Post\" &&  <MyPosts userDetails = {this.state.userDetails}/>}\n                    {this.state.userDetails !== \"\" && this.state.currentlySelected === \"Likes\" &&  <MyLikes userDetails = {this.state.userDetails}/>}\n                    {this.state.userDetails !== \"\" && this.state.currentlySelected === \"Avatar\" &&  <MyAvatar updateAvatar={(avatarId) => {this.updateAvatar(avatarId)}} userDetails = {this.state.userDetails}/>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport {Button, Typography} from '@material-ui/core';\nimport '../Styles/SearchResult.css'\n\nclass SearchResult extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if(this.props.value !== undefined) {\n            this.state = {\n                following: this.props.value.followers === undefined || this.props.value.followers.indexOf(localStorage.getItem('username')) === -1 ? false : true\n            }   \n        }\n        else {\n            this.state = {\n                following: false\n            }\n        }\n    }\n\n    follow() {\n        let postRequest = {\n            UserName: localStorage.getItem('username'),\n            FollowingUserName: this.props.value.username\n        }\n\n        fetch(\"/updateFollowing\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n              if(res.Status === 3013) {\n                this.setState({following: true})\n                if (localStorage.getItem('following') !== \"undefined\") {\n                    localStorage.setItem('following', (parseInt(localStorage.getItem('following')) + 1))\n                }\n              }\n              else {\n                  alert(\"Something Went Wrong Please Try Again\")\n              }\n          }).catch(error => {});\n          console.log(\"end\")\n    }\n\n\n    unFollow() {\n        let postRequest = {\n            UserName: localStorage.getItem('username'),\n            FollowingUserName: this.props.value.username\n        }\n\n        fetch(\"/unFollow\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n              if(res.Status === 3013) {\n                this.setState({following: false})\n                localStorage.setItem('following', localStorage.getItem('following')-1)\n              }\n              else {\n                  alert(\"Something Went Wrong Please Try Again\")\n              }\n          }).catch(error => {});\n    }\n\n    render() {\n        if(this.props.showNoResults === true) {\n            return (\n                <div className=\"noResultCard\">\n                    <div className = \"noResultsText\">No Results !</div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"searchCard\">\n                <div style={{\n                        backgroundImage: `url(../Avatars/avatar`+this.props.value.avatar+`.svg)`,\n                        height: `5vh`,\n                        marginTop: `0.2vh`,\n                        marginLeft: `1vh`,\n                        marginRight: `0.7vw`,\n                        width:`5vh`,\n                        borderRadius: `500vw`\n                    }}></div>\n                <div className=\"userDetails\"><Typography className=\"SearchCardName\" variant=\"h6\" component=\"h5\">\n                            {this.props.value.name}\n                            </Typography>\n                            <Typography className=\"SearchCardUserName\" color=\"textSecondary\">\n                            @{this.props.value.username}\n                            </Typography></div>\n                { this.props.value.username === localStorage.getItem('username') ? <div className=\"followContainerYou\"><Button disabled className=\"followButtonYou\" onClick={this.checkPost}>You</Button></div> : this.state.following === true ? <div className=\"followContainer\"><Button className=\"followButton\" onClick={() => this.unFollow()}>UnFollow</Button></div> : <div className=\"followContainer\"><Button className=\"followButton\" onClick={() => this.follow()}>Follow</Button></div>}          \n            </div>\n        )\n    }\n}\n\nexport default SearchResult;","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport PostCard from './PostCard';\nimport ReactLoading from \"react-loading\";\nimport { RestConstants } from '../Constants/application.constants';\nimport '../Styles/SavedPosts.css'\n\nclass SavedPosts extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userDetails: [],\n            size: 10,\n            page: 1,\n            savedPosts: [],\n            userDetailsFetched: 0,\n            postDetailsFetched: 0\n        }    \n    }\n\n    fetchUserDetails = () => {\n        const postRequest = {\n            UserName: localStorage.getItem('username')\n        }\n        fetch(RestConstants.FETCH_USER, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n            if (res.Status ===3000) {\n                this.setState({userDetails: res.Data, userDetailsFetched: 1})\n                if(this.state.userDetails.savedposts !== null) {\n                    this.fetchMyPosts();\n                }\n            } \n        }).catch(error => {});\n    }\n\n    fetchMyPosts = () => {\n        if(this.state.userDetails.savedposts === undefined || this.state.userDetails.savedposts.length === 0) {\n            this.setState({postDetailsFetched: 1});\n        }\n        else {\n            const postRequest = {\n                PostIds: this.state.userDetails.savedposts,\n                Size: this.state.size,\n                page: this.state.page\n            }\n            fetch(RestConstants.FETCH_POST_BY_POSTIDS, {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n            }).then(response => response.json()).then(res => {\n                if(res.Status === 3000) {\n                    this.setState({savedPosts: res.Data, postDetailsFetched: 1});\n                }\n            }).catch(error => {});\n        }\n    }\n\n    componentDidMount() {\n        this.fetchUserDetails();\n    }\n\n    updatePage() {\n        console.log(\"Reached Here !\")\n        this.fetchUserDetails();\n    }\n\n    render() {\n        let savedPosts = this.state.savedPosts;\n        if(this.state.userDetailsFetched !== 1 || this.state.postDetailsFetched !== 1) {\n            return (\n                <div style={{textAlign:`center`, width: `100%`,height: `100%`, paddingLeft: `45%`, marginTop: `45%`}}><ReactLoading type={\"bars\"} color={\"yellowgreen\"} /></div>\n                )\n        }\n        if (savedPosts.length === 0) {\n            return (\n                <div className=\"emptySavedPosts\">\n                    <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                    You haven’t added any propagates to your Bookmarks yet !\n                    </Typography>\n                    <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                    When you do, they’ll show up here.\n                    </Typography>\n                </div>\n            )\n        }\n        return(\n            <div className=\"HomeOuterClass\">\n                <div className = \"innerShell\">\n                    <div className=\"propogates\">\n                    {savedPosts.map((value, index) => {\n                    return  <PostCard value = {value} userDetails = {this.state.userDetails} calledBy = {\"SavedPostPage\"}  updateViewState={() => {this.updatePage()}}/>\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SavedPosts;","import React from 'react';\nimport PostCard from './PostCard';\nimport { RestConstants } from '../Constants/application.constants';\nimport ReactLoading from \"react-loading\";\nimport {Typography} from '@material-ui/core';\nimport '../Styles/HomePage.css'\n\nclass HomePage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            elements: [],\n            page: 1,\n            size: 10,\n            userDetails:[],\n            userDetailsFetched: 0,\n            postDetailsFetched: 0,\n        }\n    }\n\n    fetchPostDetails = () => {\n        const postRequest = {\n            Size: this.state.size,\n            Page: this.state.page\n        }\n        fetch(RestConstants.FETCH_POST, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n            if (res.Status === 3000) {\n                this.setState({elements: res.Data, postDetailsFetched: 1})\n                this.populateLikedToggle(this.state.newElements)\n            } \n          }).catch(error => {});\n    }\n\n    fetchUserDetails = () => {\n        const postRequest = {\n            UserName: localStorage.getItem('username')\n        }\n        fetch(RestConstants.FETCH_USER, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accpet': 'application/json'\n            },\n            body: JSON.stringify(postRequest)\n          }).then(response => response.json()).then(res => {\n            if (res.Status === 3000) {\n                this.setState({userDetails: res.Data, userDetailsFetched: 1})\n                localStorage.setItem(\"name\", res.Data.name);\n            } \n        }).catch(error => {});\n    }\n\n    componentDidMount() {\n        this.fetchPostDetails()\n        this.fetchUserDetails()\n    }\n\n    render() {\n        let elements = this.state.elements;\n        if (this.state.userDetailsFetched !==1 || this.state.postDetailsFetched !==1) {\n            return (\n                <div style={{textAlign:`center`, width: `100%`,height: `100%`, paddingLeft: `45%`, marginTop: `45%`}}><ReactLoading type={\"bars\"} color={\"yellowgreen\"} /></div>\n            )\n        }\n        if(elements.length === 0) {\n            return (\n                <div className=\"emptySavedPosts\">\n                    <Typography className=\"EmptySavedHeading\" variant=\"h5\" component=\"h2\">\n                    No posts to show !\n                    </Typography>\n                    <Typography className=\"EmptySavedSubHeading\" color=\"textSecondary\">\n                    When you post, they’ll show up here.\n                    </Typography>\n                </div>\n            )\n        }\n        return (\n            <div className=\"HomeOuterClass\">\n                <div className = \"innerShell\">\n                    <div className=\"propogates\">\n                    {elements.map((value, index) => {\n                    return  <PostCard userDetails={this.state.userDetails} value = {value}/>\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router';\nimport NavBar from './NavBar';\nimport Explore from './ExplorePage';\n// import Explore from './ExplorePage';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Messages from './MessagesPage';\nimport ReactLoading from \"react-loading\";\nimport Notifications from './NotificationsPage';\nimport Profile from './ProfilePage';\nimport SearchResult from './SearchResult';\nimport SavedPosts from './SavedPosts';\nimport Home from './HomePage';\nimport { Typography } from '@material-ui/core';\nimport '../Styles/BlogMain.css'\n\nclass BlogMain extends Component {\n    constructor(props) {\n        super(props);   \n        const authorised = (typeof(this.props.location.state) !== 'undefined') ? this.props.location.state.auth : false;   \n        const activeTabs = (typeof(this.props.location.state) !== 'undefined') ? this.props.location.state.activeTab : \"Home\"; \n        this.state = {\n            auth: authorised,\n            activeTab: activeTabs,\n            loading: false,\n            searchingFor: \"\",\n            elements: [],\n            page: 1,\n            size: 10\n        }\n    }\n\n    searchUsername = (event) =>{\n        this.setState({searchingFor: event.target.value})\n        if(event.target.value !== \"\") {\n            this.setState({loading: true})\n            const postRequest = {\n                UserName: event.target.value,\n                Page: this.state.page,\n                Size: this.state.size\n            }\n            fetch(\"/searchUsername\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accpet': 'application/json'\n                },\n                body: JSON.stringify(postRequest)\n                }).then(response => response.json()).then(res => {\n                if (res.Status === 3000) {\n                    if(res.Data === null) {\n                        res.Data = []\n                    }\n                    this.setState({elements: res.Data, loading: false})\n                } \n            }).catch(error => {});\n        }\n        else {\n            this.setState({elements: []})\n        }\n    }\n\n    render() {\n        let elements = this.state.elements\n        if (!this.state.auth) {\n            return <Redirect replace to=\"/\" />;\n        }\n        return (\n        <div className = \"mainBlog\">\n            <div className = \"navbar\"><NavBar authorised={this.state.auth} activeTab={this.state.activeTab} /></div>    \n            <div className = \"middlePallete\"> \n                <div className = \"headingbar\"><Typography className=\"headingText\">{this.state.activeTab}</Typography></div>\n                <div className = \"rightBottomPallete\">\n                    {this.state.activeTab === \"Home\" && <Home />}\n                    {this.state.activeTab === \"Explore\" && <Explore />}\n                    {this.state.activeTab === \"Messages\" && <Messages />}\n                    {this.state.activeTab === \"Notifications\" && <Notifications />}\n                    {this.state.activeTab === \"Profile\" && <Profile />}\n                    {this.state.activeTab === \"Saved\" && <SavedPosts />}\n                </div>\n            </div>\n            <div className=\"leftbar\">\n                <div className=\"innerSearchBox\" onChange={this.searchUsername}>\n                    <TextField className=\"searchBoxTextField\"\n                        placeholder=\"Search Username\"\n                        variant=\"outlined\"\n                        InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                            <SearchIcon />\n                            </InputAdornment>\n                        ),\n                        }}\n                    />\n                    { this.state.loading === true && <div style={{textAlign:`center`, width: `100%`,height: `100%`, paddingLeft: `45%`, marginTop: `10%`}}><ReactLoading type={\"bars\"} color={\"yellowgreen\"} /></div>}\n                    { this.state.loading === false && this.state.searchingFor !== \"\" && this.state.elements.length === 0 && <SearchResult showNoResults={true} />} \n                    { this.state.loading === false && this.state.searchingFor !== \"\" && this.state.elements.length !== 0 &&\n                    <div className=\"searchResults\">\n                        {elements.map((value, index) => {\n                        return  <SearchResult value = {value} showNoResults={false}/>\n                        })}\n                    </div>\n                    }\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default BlogMain;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport BlogMain from './Components/BlogMain'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <Router>\n      <div>\n        <Route exact path=\"/\" render={(props) => <App{...props}/>} />\n        <Route exact path=\"/mainPage\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Home\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Explore\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Messages\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Notifications\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Profile\" render={(props) => <BlogMain {...props}/>}/>\n        <Route exact path=\"/mainPage/Saved\" render={(props) => <BlogMain {...props}/>}/>\n      </div>\n    </Router>\n  )\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}